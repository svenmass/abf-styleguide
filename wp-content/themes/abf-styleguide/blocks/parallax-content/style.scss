// =============================================================================
// PARALLAX CONTENT BLOCK STYLES
// =============================================================================

// Import variables (wenn separat kompiliert)
// @import '../../../assets/scss/variables';

// Main Block Container
.block-parallax-content {
    width: 100vw;
    max-width: 100vw;
    margin: 0 !important;
    padding: 0 !important;
    box-sizing: border-box;
}

// Individual Content Element
.parallax-content-element {
    position: relative;
    width: 100vw;
    min-height: 420px;
    max-width: 100vw;
    display: grid;
    grid-template-columns: 50% 50%;
    grid-template-rows: 120px 1fr; // Feste Höhe für E1/E2, Rest für E3/E4
    grid-template-areas: 
        "e1 e2"
        "e3 e4";
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

// =============================================================================
// GRID AREAS E1-E4
// =============================================================================

// E1: Headline Area (min 120px, v-center)
.parallax-content-area-e1 {
    grid-area: e1;
    min-height: 120px;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    padding: $spacing-lg;
    box-sizing: border-box;
}

// E2: Spacer Area (empty, mobile hidden)
.parallax-content-area-e2 {
    grid-area: e2;
    /* Leer - sorgt für Alignment */
}

// E3: Content Area (richtext top, button bottom)
.parallax-content-area-e3 {
    grid-area: e3;
    display: flex;
    flex-direction: column;
    padding: $spacing-lg;
    box-sizing: border-box;
}

.parallax-content-e3-inner {
    display: flex;
    flex-direction: column;
    justify-content: flex-start; /* Default: alles oben */
    height: 100%;
    min-height: 300px; /* 420px - 120px für E1 */
    
    /* Wenn Button vorhanden: space-between für Richtext oben, Button unten */
    &.has-button {
        justify-content: space-between;
    }
}

// E4: White Layer with Media
.parallax-content-area-e4 {
    grid-area: e4;
    position: relative;
    display: flex;
    align-items: flex-end; // align bottom
    justify-content: flex-end; // align right
    padding: 0 $spacing-lg 0 0; // Standard padding rechts
    box-sizing: border-box;
}

// Typography
.parallax-content-headline {
    margin: 0 0 $spacing-md 0;
    font-family: $font-family-primary;
    text-align: left;
    line-height: 1.2;
}

.parallax-content-richtext {
    margin: 0 0 $spacing-lg 0;
    font-family: $font-family-primary;
    color: inherit;
    line-height: 1.6;
    
    // Standard richtext styling
    p {
        margin: 0 0 $spacing-sm 0;
        
        &:last-child {
            margin-bottom: 0;
        }
    }
    
    ul, ol {
        margin: 0 0 $spacing-sm 0;
        padding-left: $spacing-md;
    }
    
    strong {
        font-weight: 700;
    }
    
    em {
        font-style: italic;
    }
    
    a {
        color: inherit;
        text-decoration: underline;
        
        &:hover {
            text-decoration: none;
        }
    }
}

// Button
.parallax-content-button-wrapper {
    display: flex;
    justify-content: flex-start;
    align-items: center;
}

.parallax-content-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-family: $font-family-primary;
    font-weight: $font-weight-regular;
    font-size: $font-size-body;
    line-height: $line-height-base;
    padding: $button-padding-y $button-padding-x;
    border: none;
    border-radius: $button-border-radius;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.3s ease;
    
    &:hover,
    &:focus {
        text-decoration: none;
        outline: none;
    }
}

// =============================================================================
// WHITE LAYER POSITIONING
// =============================================================================

// White Layer
.parallax-content-white-layer {
    position: relative;
    width: 75%; // 75% der rechten Seite = 37.5% vom Gesamt, align right
    max-width: 75%;
    min-height: 300px; // Full height available in E4
    margin-top: 0; // Kein margin-top mehr nötig durch Grid-Layout
    background-color: #ffffff;
    border-radius: 40px 0 0 0; // top-left 40px only
    overflow: hidden;
    box-sizing: border-box;
    
    // Ensure white layer takes full available height
    flex-grow: 1;
    align-self: stretch;
}

// =============================================================================
// MEDIA CONTENT STYLING
// =============================================================================

// Contain Image with Padding
.parallax-content-white-layer.has-contain {
    padding: $spacing-lg;
    
    .parallax-media-container.contain {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .parallax-media-image.contain {
        max-width: 100%;
        max-height: 100%;
        width: auto;
        height: auto;
        object-fit: contain;
        object-position: center center;
    }
}

// Cover Image (no padding)
.parallax-content-white-layer.has-cover {
    padding: 0;
    
    .parallax-media-image.cover {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center center;
    }
}

// Video (no padding, always cover)
.parallax-content-white-layer.has-video {
    padding: 0;
    
    .parallax-media-video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center center;
    }
}

// =============================================================================
// RESPONSIVE DESIGN
// =============================================================================

// Tablet (bis Desktop Breakpoint) - Stacked Layout
@media (max-width: #{$breakpoint-desktop - 1px}) {
    .parallax-content-element {
        grid-template-columns: 1fr;
        grid-template-rows: 120px auto auto; // E1 bleibt 120px, E3 und E4 auto
        grid-template-areas: 
            "e1"
            "e3"
            "e4";
        min-height: auto;
    }
    
    // E2 auf Tablet verstecken
    .parallax-content-area-e2 {
        display: none;
    }
    
    .parallax-content-area-e1 {
        min-height: 200px;
        padding: $spacing-lg;
    }
    
    .parallax-content-area-e3 {
        padding: 0 $spacing-lg $spacing-lg $spacing-lg;
    }
    
    .parallax-content-e3-inner {
        min-height: 200px;
    }
    
    .parallax-content-area-e4 {
        padding: 0 $spacing-lg $spacing-lg $spacing-lg;
        align-items: center;
        justify-content: flex-end; // align right auch auf Tablet
    }
    
    .parallax-content-white-layer {
        width: 100%;
        max-width: 100%;
        margin-top: 0; // Bereits korrekt auf 0 gesetzt
        min-height: 400px;
    }
    
    // Contain padding auf Tablet
    .parallax-content-white-layer.has-contain {
        padding: $spacing-lg;
    }
}

// Mobile - Smaller spacing
@media (max-width: #{$breakpoint-mobile - 1px}) {
    .parallax-content-area-e1 {
        padding: $spacing-md;
        min-height: 150px;
    }
    
    .parallax-content-area-e3 {
        padding: 0 $spacing-md $spacing-md $spacing-md;
    }
    
    .parallax-content-e3-inner {
        min-height: 150px;
    }
    
    .parallax-content-area-e4 {
        padding: 0 $spacing-md $spacing-md $spacing-md;
        justify-content: flex-end; // align right auch auf Mobile
    }
    
    .parallax-content-white-layer {
        min-height: 350px;
    }
    
    // Contain padding auf Mobile
    .parallax-content-white-layer.has-contain {
        padding: $spacing-md;
    }
    
    // Kleinere Button und Text auf Mobile
    .parallax-content-button {
        padding: 12px 24px;
        font-size: 14px;
    }
    
    .parallax-content-headline {
        font-size: calc(var(--font-size) * 0.8) !important;
    }
}

// =============================================================================
// GSAP SCROLLTRIGGER STICKY SYSTEM
// =============================================================================

// Base styling für alle parallax elements 
.parallax-content-element {
    // Z-Index wird über GSAP JavaScript dynamisch gesetzt
    // Wichtig: Relative Positionierung für korrektes Z-Index-Verhalten
    z-index: 1;
    
    // Smooth transitions wenn Elemente sticky werden
    transition: all 0.3s ease-out;
}

// Sticky State Klasse (wird von GSAP dynamisch hinzugefügt)
.parallax-content-element.is-sticky {
    // GSAP übernimmt die Positionierung - wir definieren nur visuelle Änderungen
    
    // Optional: Subtile Schatten oder andere visuelle Cues für Sticky-State
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    
    // Smooth transitions
    transition: all 0.3s ease-out;
}

// Z-Index Stacking für das Überdeckungsverhalten
// Spätere Elemente sollen frühere überdecken
.parallax-content-element[data-element="1"] {
    z-index: 1001;
}

.parallax-content-element[data-element="2"] {
    z-index: 1002;
}

.parallax-content-element[data-element="3"] {
    z-index: 1003;
}

.parallax-content-element[data-element="4"] {
    z-index: 1004;
}

.parallax-content-element[data-element="5"] {
    z-index: 1005;
}

// Falls mehr Elemente benötigt werden, kann dies erweitert werden

// GSAP Pin-Spacer Fixes (GSAP fügt automatisch .pin-spacer divs hinzu)
.pin-spacer {
    // Stelle sicher, dass Pin-Spacer keine ungewollten Margins/Paddings haben
    margin: 0 !important;
    padding: 0 !important;
}

// Performance Optimierungen für GSAP
.parallax-content-element {
    // Hardware-Acceleration für smoother Animationen
    transform: translateZ(0);
    will-change: transform;
    
    // Smooth rendering
    backface-visibility: hidden;
}

// Debug-Styles (wenn GSAP markers aktiv sind)
.gsap-marker-scroller-start,
.gsap-marker-scroller-end,
.gsap-marker-start,
.gsap-marker-end {
    // Verstecke GSAP Debug-Marker in Production
    // Zum Debugging markers: true in ScrollTrigger.create() setzen
    display: none !important;
}

// Optional: Debug-Mode aktivieren
// Uncomment für Debugging:
/*
.gsap-marker-scroller-start,
.gsap-marker-scroller-end,
.gsap-marker-start,
.gsap-marker-end {
    display: block !important;
}
*/

// =============================================================================
// RESPONSIVE ANPASSUNGEN FÜR STICKY SYSTEM
// =============================================================================

// Tablet: Veränderte Sticky-Verhalten (falls gewünscht)
@media (max-width: #{$breakpoint-desktop - 1px}) {
    .parallax-content-element.is-sticky {
        // Optional: Angepasste Schatten oder Effekte auf Tablet
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
    }
}

// Mobile: Deaktiviere möglicherweise Sticky-Effekte (falls Performance-Probleme)
@media (max-width: #{$breakpoint-mobile - 1px}) {
    // Behalte alle Effekte auch auf Mobile
    // Falls Probleme auftreten, können hier Anpassungen gemacht werden
    
    .parallax-content-element.is-sticky {
        // Reduzierte Schatten auf Mobile für Performance
        box-shadow: 0 1px 10px rgba(0, 0, 0, 0.05);
    }
} 